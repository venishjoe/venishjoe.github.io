<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Database on VENISHJOE.NET</title>
    <link>/tags/database/index.xml</link>
    <description>Recent content in Database on VENISHJOE.NET</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>venish@venishjoe.net (Venish Joe Clarence)</managingEditor>
    <webMaster>venish@venishjoe.net (Venish Joe Clarence)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <atom:link href="/tags/database/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Recover Database Passwords from Weblogic Server</title>
      <link>/post/recover-database-passwords-from-weblogic-server/</link>
      <pubDate>Sun, 20 Sep 2009 17:24:00 +0000</pubDate>
      <author>venish@venishjoe.net (Venish Joe Clarence)</author>
      <guid>/post/recover-database-passwords-from-weblogic-server/</guid>
      <description>&lt;p&gt;In this post, I am going to explain how to Decrypt or recover the passwords which are encrypted (or hashed) in Weblogic 8.1 especially the database passwords.
If you ever forgot the database password which is already configured with Weblogic or the password for the user which is used to start Weblogic, this will be handy.
The hashed passwords can be normally found in config.xml and boot.properties inside the application domain.
The database passwords will be in config.xml under the JDBC configuration and will look something like below.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ PasswordEncrypted=&amp;quot;{3DES}bDcllidskanDsaIsnaiG==&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To recover the passwords, we need some prerequisites which are listed below.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;weblogic.jar &amp;amp; jsafeFIPS.jar from the Weblogic server. (You can find this under WL_HOME/server/lib directory)&lt;/li&gt;
&lt;li&gt;SerializedSystemIni.dat from the application domain (You can find this under the application domain root)&lt;/li&gt;
&lt;li&gt;The encrypted password from config.xml / boot.properties including {3DES}&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;SerializedSystemIni.dat has the key to recover the passwords so this is absolutely essential and it should be from the same server since the key depends on the machine.
If you are not able to find this file, then probably the server administrator hasn’t given read access to this file to all the users. For Production systems that should be a practice,
only the id which will be starting the weblogic server should have read permissions to the SerializedSystemIni.dat file. If not, this will be a security risk,
its like leaving the key for your Home on the street. Coming back to the subject, if you got the file then you are all set for the next step.&lt;/p&gt;

&lt;p&gt;Assuming you have all the files needed, let’s proceed to the next step. You can copy all the prerequisite files to your workstation or if needed you can run the utility from the server too.
As long as the machines have JDK installed it should be fine.&lt;/p&gt;

&lt;p&gt;To recover the passwords we will be using a utility from Apache &lt;a href=&#34;http://geronimo.apache.org/apidocs/2.0.1/&#34;&gt;Geronimo 2.0.1 API&lt;/a&gt; -
&lt;a href=&#34;http://geronimo.apache.org/apidocs/2.0.1/src-html/org/apache/geronimo/converter/bea/Weblogic81Utils.html&#34;&gt;Weblogic81Utils.java&lt;/a&gt;. Although this file is a part of a package,
this can be run as a standalone class with little modification. All you need to do is to remove the package reference and add a main() method to the class.
The code for main() method is below.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;public static void main(String args[]) {
    try{
        String beaDir = &#34;$Server/lib or the Directory which has the requried JAR files$&#34;;
        String appDir = &#34;$App Domain or the Directory which has SerializedSystemIni.dat$&#34;;
        String hashedPassword = &#34;{3DES}Vdsds76nGsfdsfKJbg54ss==&#34;;
        Weblogic81Utils weblogic81Utils = new Weblogic81Utils(beaDir, appDir);
        String plainTextPassword = weblogic81Utils.decryptString(hashedPassword);
        String configXML = weblogic81Utils.getConfigXML();
        Properties bootProperties = (Properties) weblogic81Utils.getBootProperties();
        System.out.println(&#34;-----------------------------------------------------&#34;);
        System.out.println(&#34;hashedPassword&#34; + &#34; == &#34; + plainTextPassword);
        System.out.println(&#34;boot.properties&#34; + &#34; &amp;lt;username&amp;gt; &#34;
            + bootProperties.getProperty(&#34;username&#34;));
        System.out.println(&#34;boot.properties&#34; + &#34; &amp;lt;password&amp;gt; &#34;
            + bootProperties.getProperty(&#34;password&#34;));
        System.out.println(&#34;-----------------------------------------------------&#34;);
    } catch (Exception e) {
        throw (RuntimeException)new IllegalArgumentException(&#34;Unable to initialize&#34;
            + &#34;encryption routines from provided arguments&#34;).initCause(e);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;beaDir - If you are running this on the server, it will be the $WL_HOME/server/lib directory. If you are running elsewhere it will be the path which has weblogic.jar and jsafeFIPS.jar.&lt;/p&gt;

&lt;p&gt;appDir - If you are running this on the server, it will be your application domain directory. If you are running elsewhere, it will be the path which contains SerializedSystemIni.dat,
config.xml and boot.properties.&lt;/p&gt;

&lt;p&gt;hashedPassword – In this example, I am not reading config.xml directly instead I give the encrypted password as a input. So this will be the encrypted database password from your config.xml.&lt;/p&gt;

&lt;p&gt;Save the class file and we are all set to run the program. Make sure you removed the package reference since we are running this as a standalone program. No other change is required.
Compile the class and run the class. I tested this using JDK 1.6, but any JDK higher than 1.4 should work.&lt;/p&gt;

&lt;p&gt;Sample output is given below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/images/00002/recover-database-passwords-output.png#floatcenter&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This was tested with Weblogic Server 8.1 and JDK 1.6.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>